"use strict";(self.webpackChunkbeauty_docs=self.webpackChunkbeauty_docs||[]).push([[6167],{8453:(e,n,i)=>{i.d(n,{R:()=>a,x:()=>t});var s=i(6540);const o={},r=s.createContext(o);function a(e){const n=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function t(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:a(e.components),s.createElement(r.Provider,{value:n},e.children)}},8917:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>c,contentTitle:()=>t,default:()=>h,frontMatter:()=>a,metadata:()=>s,toc:()=>l});const s=JSON.parse('{"id":"Advanced/configuration-system","title":"Configuration System","description":"Beauty Framework uses a clean and consistent configuration system based on plain PHP arrays. All configuration files live in the config/ directory and are automatically loaded at runtime.","source":"@site/docs/3-Advanced/configuration-system.md","sourceDirName":"3-Advanced","slug":"/Advanced/configuration-system","permalink":"/docs/Advanced/configuration-system","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":8,"frontMatter":{"sidebar_position":8},"sidebar":"tutorialSidebar","previous":{"title":"ORM (WIP)","permalink":"/docs/Advanced/orm"},"next":{"title":"CLI & Console Kernel","permalink":"/docs/Advanced/console"}}');var o=i(4848),r=i(8453);const a={sidebar_position:8},t="Configuration System",c={},l=[{value:"\ud83d\uddc2 Directory Structure",id:"-directory-structure",level:2},{value:"\ud83e\udde9 Nested Keys",id:"-nested-keys",level:2},{value:"\ud83d\ude80 Caching",id:"-caching",level:2},{value:"\ud83e\uddf1 Extensibility",id:"-extensibility",level:2},{value:"\ud83d\udcc1 Configuration Loader",id:"-configuration-loader",level:2},{value:"\ud83d\udee0 Where It&#39;s Defined",id:"-where-its-defined",level:2},{value:"\ud83d\udcda Related Docs",id:"-related-docs",level:2}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",hr:"hr",li:"li",p:"p",pre:"pre",ul:"ul",...(0,r.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsx)(n.h1,{id:"configuration-system",children:"Configuration System"})}),"\n",(0,o.jsxs)(n.p,{children:["Beauty Framework uses a clean and consistent configuration system based on plain PHP arrays. All configuration files live in the ",(0,o.jsx)(n.code,{children:"config/"})," directory and are automatically loaded at runtime."]}),"\n",(0,o.jsxs)(n.p,{children:["You can access configuration values via the global ",(0,o.jsx)(n.code,{children:"config()"})," helper:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-php",children:"config('cache.default'); // 'redis'\nconfig('database.connections.pgsql.host'); // '127.0.0.1'\n"})}),"\n",(0,o.jsxs)(n.p,{children:["You can also inject the ",(0,o.jsx)(n.code,{children:"ConfigRepository"})," class if needed."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-php",children:"use Beauty\\Core\\Config\\ConfigRepository;\n\npublic function __construct(\n    private ConfigRepository $config\n) {\n    $defaultCache = $this->config->get('cache.default');\n}\n"})}),"\n",(0,o.jsx)(n.hr,{}),"\n",(0,o.jsx)(n.h2,{id:"-directory-structure",children:"\ud83d\uddc2 Directory Structure"}),"\n",(0,o.jsxs)(n.p,{children:["All configuration files live in the ",(0,o.jsx)(n.code,{children:"config/"})," directory. For example:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"config/\n\u251c\u2500\u2500 app.php\n\u251c\u2500\u2500 cache.php\n\u251c\u2500\u2500 database.php\n\u251c\u2500\u2500 events.php\n\u251c\u2500\u2500 jobs.php\n\u251c\u2500\u2500 logging.php\n\u251c\u2500\u2500 queue.php\n\u2514\u2500\u2500 services.php\n"})}),"\n",(0,o.jsx)(n.hr,{}),"\n",(0,o.jsx)(n.h2,{id:"-nested-keys",children:"\ud83e\udde9 Nested Keys"}),"\n",(0,o.jsx)(n.p,{children:"You can use dot notation to access deeply nested values:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-php",children:"config('database.connections.pgsql.port'); // 5432\n"})}),"\n",(0,o.jsx)(n.hr,{}),"\n",(0,o.jsx)(n.h2,{id:"-caching",children:"\ud83d\ude80 Caching"}),"\n",(0,o.jsx)(n.p,{children:"Internally, the configuration system caches parsed configs for fast access. You don\u2019t need to manually warm up anything."}),"\n",(0,o.jsx)(n.hr,{}),"\n",(0,o.jsx)(n.h2,{id:"-extensibility",children:"\ud83e\uddf1 Extensibility"}),"\n",(0,o.jsxs)(n.p,{children:["You can easily add your own configuration files in ",(0,o.jsx)(n.code,{children:"config/"}),"."]}),"\n",(0,o.jsxs)(n.p,{children:["Example: ",(0,o.jsx)(n.code,{children:"config/image.php"})]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-php",children:"<?php\n\nreturn [\n    'resize' => true,\n    'max_width' => 1920,\n];\n"})}),"\n",(0,o.jsx)(n.p,{children:"Access:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-php",children:"config('image.max_width'); // 1920\n"})}),"\n",(0,o.jsx)(n.hr,{}),"\n",(0,o.jsx)(n.h2,{id:"-configuration-loader",children:"\ud83d\udcc1 Configuration Loader"}),"\n",(0,o.jsxs)(n.p,{children:["The internal loader is responsible for recursively loading all files in ",(0,o.jsx)(n.code,{children:"config/"}),". It also supports environment overrides and ensures immutability after boot (unless explicitly allowed)."]}),"\n",(0,o.jsx)(n.hr,{}),"\n",(0,o.jsx)(n.h2,{id:"-where-its-defined",children:"\ud83d\udee0 Where It's Defined"}),"\n",(0,o.jsx)(n.p,{children:"The main configuration loader is registered in:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"App\\Container\\Config\\RegisterConfig\n"})}),"\n",(0,o.jsx)(n.hr,{}),"\n",(0,o.jsx)(n.h2,{id:"-related-docs",children:"\ud83d\udcda Related Docs"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.a,{href:"/docs/Installation/configure",children:"Installation / Configuration"})}),"\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.a,{href:"/docs/Installation/Configs/database",children:"Installation / Configs / database"})}),"\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.a,{href:"/docs/Installation/Configs/cache",children:"Installation / Configs / cache"})}),"\n"]}),"\n",(0,o.jsx)(n.p,{children:"Use those docs if you want to create your own config or provide providers for new services."}),"\n",(0,o.jsx)(n.hr,{}),"\n",(0,o.jsxs)(n.p,{children:["Beauty makes config access and customization seamless and developer-friendly \u2014 no more ",(0,o.jsx)(n.code,{children:".env"})," hunting or YAML chaos."]})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}}}]);