"use strict";(self.webpackChunkbeauty_docs=self.webpackChunkbeauty_docs||[]).push([[3966],{5915:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>l,contentTitle:()=>c,default:()=>u,frontMatter:()=>t,metadata:()=>s,toc:()=>i});const s=JSON.parse('{"id":"Advanced/processes","title":"Local Process Management","description":"Beauty Framework provides a lightweight concurrency API out of the box via beauty-framework/parallels, allowing you to run multiple operations in parallel using Fibers (and in the future \u2014 RoadRunner Jobs).","source":"@site/docs/3-Advanced/processes.md","sourceDirName":"3-Advanced","slug":"/Advanced/processes","permalink":"/docs/Advanced/processes","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":5,"frontMatter":{"sidebar_position":5},"sidebar":"tutorialSidebar","previous":{"title":"Cache System","permalink":"/docs/Advanced/caches"},"next":{"title":"Database Access","permalink":"/docs/Advanced/database"}}');var o=r(4848),a=r(8453);const t={sidebar_position:5},c="Local Process Management",l={},i=[{value:"\u2699\ufe0f Concurrent::run()",id:"\ufe0f-concurrentrun",level:2},{value:"\ud83e\uddf0 Execution Modes",id:"-execution-modes",level:2},{value:"Available modes:",id:"available-modes",level:3},{value:"\ud83d\udd12 Locking via RoadRunner",id:"-locking-via-roadrunner",level:2},{value:"\ud83e\uddf1 Summary",id:"-summary",level:2},{value:"\ud83d\udd17 Repository",id:"-repository",level:2}];function d(e){const n={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,a.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsx)(n.h1,{id:"local-process-management",children:"Local Process Management"})}),"\n",(0,o.jsxs)(n.p,{children:["Beauty Framework provides a lightweight concurrency API out of the box via ",(0,o.jsx)(n.a,{href:"https://github.com/beauty-framework/parallels",children:"beauty-framework/parallels"}),", allowing you to run multiple operations in parallel using Fibers (and in the future \u2014 RoadRunner Jobs)."]}),"\n",(0,o.jsx)(n.p,{children:"This is useful for executing several slow operations (e.g., API calls, queries) in a non-blocking and structured way."}),"\n",(0,o.jsx)(n.h2,{id:"\ufe0f-concurrentrun",children:"\u2699\ufe0f Concurrent::run()"}),"\n",(0,o.jsxs)(n.p,{children:["The core method is ",(0,o.jsx)(n.code,{children:"Concurrent::run()"}),":"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-php",children:"use Beauty\\Parallels\\Concurrent;\n\n$results = Concurrent::run([\n    'task-1' => fn() => 1 + 1,\n    'task-2' => fn() => strtoupper('hello'),\n]);\n\nprint_r($results);\n"})}),"\n",(0,o.jsx)(n.p,{children:"Output:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-php",children:"[\n    'task-1' => 2,\n    'task-2' => 'HELLO',\n]\n"})}),"\n",(0,o.jsx)(n.h2,{id:"-execution-modes",children:"\ud83e\uddf0 Execution Modes"}),"\n",(0,o.jsx)(n.p,{children:"By default, execution happens using PHP Fibers:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-php",children:"Concurrent::run([\n    'a' => fn() => 42,\n], 5); // Timeout: 5s, mode: fiber\n"})}),"\n",(0,o.jsx)(n.p,{children:"You can also specify the execution mode explicitly:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-php",children:"use Beauty\\Parallels\\WorkersName;\n\nConcurrent::run([\n    'slow' => fn() => sleep(1),\n], 10, WorkersName::FIBER);\n"})}),"\n",(0,o.jsx)(n.h3,{id:"available-modes",children:"Available modes:"}),"\n",(0,o.jsxs)(n.table,{children:[(0,o.jsx)(n.thead,{children:(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.th,{children:"Mode"}),(0,o.jsx)(n.th,{children:"Description"})]})}),(0,o.jsxs)(n.tbody,{children:[(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:(0,o.jsx)(n.code,{children:"fiber"})}),(0,o.jsx)(n.td,{children:"Default. Uses PHP Fibers"})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:(0,o.jsx)(n.code,{children:"process"})}),(0,o.jsx)(n.td,{children:"WIP. Executes via RoadRunner Jobs"})]})]})]}),"\n",(0,o.jsxs)(n.blockquote,{children:["\n",(0,o.jsxs)(n.p,{children:["\u2139\ufe0f The ",(0,o.jsx)(n.code,{children:"process"})," mode is experimental and not recommended for production yet."]}),"\n"]}),"\n",(0,o.jsx)(n.h2,{id:"-locking-via-roadrunner",children:"\ud83d\udd12 Locking via RoadRunner"}),"\n",(0,o.jsxs)(n.p,{children:["If you need to manage concurrency using distributed locks, you can use the RoadRunner ",(0,o.jsx)(n.code,{children:"LockInterface"})," and access it via DI:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-php",children:"public function __construct(\n    protected LockInterface $lock,\n) {}\n"})}),"\n",(0,o.jsxs)(n.p,{children:["For more information, see ",(0,o.jsx)(n.a,{href:"https://docs.roadrunner.dev/docs/plugins/locks",children:"RoadRunner Locks documentation"}),"."]}),"\n",(0,o.jsx)(n.h2,{id:"-summary",children:"\ud83e\uddf1 Summary"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["Run multiple closures in parallel with ",(0,o.jsx)(n.code,{children:"Concurrent::run()"})]}),"\n",(0,o.jsx)(n.li,{children:"Default execution uses Fibers for lightweight multitasking"}),"\n",(0,o.jsx)(n.li,{children:"Custom timeout and mode can be configured"}),"\n",(0,o.jsx)(n.li,{children:"Distributed locks are supported via RoadRunner's Lock plugin"}),"\n",(0,o.jsxs)(n.li,{children:["Based on the ",(0,o.jsx)(n.code,{children:"beauty-framework/parallels"})," package"]}),"\n"]}),"\n",(0,o.jsx)(n.h2,{id:"-repository",children:"\ud83d\udd17 Repository"}),"\n",(0,o.jsxs)(n.p,{children:["Parallels are implemented in the ",(0,o.jsx)(n.code,{children:"beauty-framework/parallels"})," package (already connected in the framework):"]}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.a,{href:"https://github.com/beauty-framework/parallels",children:"https://github.com/beauty-framework/parallels"})})]})}function u(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}},8453:(e,n,r)=>{r.d(n,{R:()=>t,x:()=>c});var s=r(6540);const o={},a=s.createContext(o);function t(e){const n=s.useContext(a);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:t(e.components),s.createElement(a.Provider,{value:n},e.children)}}}]);