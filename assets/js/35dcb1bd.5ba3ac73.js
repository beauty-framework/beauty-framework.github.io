"use strict";(self.webpackChunkbeauty_docs=self.webpackChunkbeauty_docs||[]).push([[3689],{2745:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>l,contentTitle:()=>c,default:()=>p,frontMatter:()=>r,metadata:()=>t,toc:()=>a});const t=JSON.parse('{"id":"Components/OpenAPI/index","title":"OpenAPI Support","description":"This package brings modern OpenAPI 3 documentation support to the Beauty Framework. Powered by swagger-php under the hood, it lets you document your REST API using PHP 8.1+ attributes and instantly serves up-to-date docs with a beautiful Redoc UI.","source":"@site/docs/5-Components/3-OpenAPI/index.md","sourceDirName":"5-Components/3-OpenAPI","slug":"/Components/OpenAPI/","permalink":"/docs/Components/OpenAPI/","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Modules Support","permalink":"/docs/Components/Modules/"},"next":{"title":"Beauty Framework Roadmap","permalink":"/docs/Roadmap/"}}');var s=i(4848),o=i(8453);const r={},c="OpenAPI Support",l={},a=[{value:"Installation",id:"installation",level:2},{value:"Quick Start",id:"quick-start",level:2},{value:"Switching Documentation UI",id:"switching-documentation-ui",level:2},{value:"Customization",id:"customization",level:2},{value:"How it works",id:"how-it-works",level:2},{value:"Static Generation",id:"static-generation",level:2},{value:"Under the Hood",id:"under-the-hood",level:2},{value:"Limitations &amp; Tips",id:"limitations--tips",level:2},{value:"Resources",id:"resources",level:2}];function d(e){const n={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"openapi-support",children:"OpenAPI Support"})}),"\n",(0,s.jsxs)(n.p,{children:["This package brings modern OpenAPI 3 documentation support to the Beauty Framework. Powered by ",(0,s.jsx)(n.a,{href:"https://github.com/zircote/swagger-php",children:"swagger-php"})," under the hood, it lets you document your REST API using PHP 8.1+ attributes and instantly serves up-to-date docs with a beautiful Redoc UI."]}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:["\u26a0\ufe0f This is an ",(0,s.jsx)(n.strong,{children:"optional module"}),". You need to install and configure it manually."]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"installation",children:"Installation"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"make composer require beauty-framework/openapi-support\n# Or without Docker\ncomposer require beauty-framework/openapi-support\n"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Requirements:"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"PHP >=8.1"}),"\n",(0,s.jsx)(n.li,{children:"beauty-framework/cli ^1.0 (for CLI integration)"}),"\n",(0,s.jsx)(n.li,{children:"zircote/swagger-php ^5.1 (OpenAPI generator)"}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"quick-start",children:"Quick Start"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsxs)(n.strong,{children:["Create your API controller inheriting from ",(0,s.jsx)(n.code,{children:"BaseOpenApiController"}),":"]})}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-php",metastring:"{17}",children:"namespace App\\Controllers;\n\nuse Beauty\\OpenApi\\Http\\Controllers\\BaseOpenApiController;\nuse OpenApi\\Attributes as OAT;\n\n#[OAT\\OpenApi(openapi: OAT\\OpenApi::VERSION_3_1_0, security: [['bearerAuth' => []]])]\n#[OAT\\Info(\n    version: '1.0.0',\n    title: 'Basic single file API',\n    attachables: [new OAT\\Attachable()]\n)]\n#[OAT\\License(name: 'MIT', identifier: 'MIT')]\n#[OAT\\Server(url: 'https://localhost/', description: 'API server')]\n#[OAT\\SecurityScheme(securityScheme: 'bearerAuth', type: 'http', scheme: 'bearer', description: 'Basic Auth')]\n#[OAT\\Tag(name: 'products', description: 'All about products')]\n#[OAT\\Tag(name: 'catalog', description: 'Catalog API')]\nclass ApiController extends BaseOpenApiController\n{\n    // Instantly exposes /openapi.json and /docs/api!\n}\n"})}),"\n",(0,s.jsxs)(n.ol,{start:"2",children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsxs)(n.strong,{children:["Annotate your endpoints and models using ",(0,s.jsx)(n.a,{href:"https://zircote.github.io/swagger-php/guide/attributes.html",children:"swagger-php attributes"}),":"]})}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-php",metastring:"{3}",children:"use OpenApi\\Attributes as OAT;\n\n#[OAT\\Get(path: '/products', tags: ['products'], ...)]\n#[Route(method: HttpMethodsEnum::GET, path: '/products')]\npublic function listProducts() { ... }\n"})}),"\n",(0,s.jsxs)(n.ol,{start:"3",children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.strong,{children:"Register console commands (optional, for static generation):"})}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["Add to ",(0,s.jsx)(n.code,{children:"config/commands.php"}),":"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-php",metastring:"{3}",children:"return array_merge(\n    // ...\n    \\Beauty\\OpenApi\\Console\\RegisterCommands::commands(),\n    // ...\n);\n"})}),"\n",(0,s.jsxs)(n.ol,{start:"4",children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.strong,{children:"Access your docs at:"})}),"\n"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"/openapi.json"})," for up-to-date OpenAPI spec"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"/docs/api"})," for Stoplight-powered interactive docs"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"switching-documentation-ui",children:"Switching Documentation UI"}),"\n",(0,s.jsxs)(n.p,{children:["You can control which documentation UI is shown at ",(0,s.jsx)(n.code,{children:"/docs/api"})," by setting the ",(0,s.jsx)(n.code,{children:"OPENAPI_MODE"})," variable in your ",(0,s.jsx)(n.code,{children:".env"})," file:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-dotenv",children:"OPENAPI_MODE=stoplight # or swagger, redoc, rapid\n"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Supported values:"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"stoplight (default)"}),"\n",(0,s.jsx)(n.li,{children:"swagger"}),"\n",(0,s.jsx)(n.li,{children:"redoc"}),"\n",(0,s.jsx)(n.li,{children:"rapid"}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["The selected viewer will be automatically rendered at ",(0,s.jsx)(n.code,{children:"/docs/api"})," depending on this value."]}),"\n",(0,s.jsx)(n.p,{children:"If you provide an invalid value, Stoplight will be used by default."}),"\n",(0,s.jsx)(n.h2,{id:"customization",children:"Customization"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["Override ",(0,s.jsx)(n.code,{children:"documentation()"})," or ",(0,s.jsx)(n.code,{children:"openApiJson()"})," methods in your controller to change the output."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Docs page can be replaced or extended as needed."}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["You can provide your own action classes (see ",(0,s.jsx)(n.code,{children:"SpecsAction"})," and ",(0,s.jsx)(n.code,{children:"RedocAction"}),") to control exactly how spec and documentation UI are served."]}),"\n",(0,s.jsx)(n.p,{children:"Example:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-php",children:"#[Route(method: HttpMethodsEnum::GET, path: '/documentation')]\npublic function docs(RedocAction $action): ResponseInterface\n{\n    return $action();\n}\n"})}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"This gives you full control over OpenAPI JSON and Redoc page delivery."}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"how-it-works",children:"How it works"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["At runtime, ",(0,s.jsx)(n.code,{children:"SpecsAction"})," uses ",(0,s.jsx)(n.code,{children:"OpenApiGenerator"})," to scan your codebase and build the OpenAPI spec (",(0,s.jsx)(n.code,{children:"/openapi.json"}),")."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"RedocAction"})," renders a Redoc UI page pointing to ",(0,s.jsx)(n.code,{children:"/openapi.json"})," (other DocActions work like RedocAction)."]}),"\n",(0,s.jsx)(n.li,{children:"For production, you can pre-generate the spec with the CLI command and serve it as a static file for best performance."}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"static-generation",children:"Static Generation"}),"\n",(0,s.jsx)(n.p,{children:"You can generate the OpenAPI spec as a file using the CLI:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"make beauty openapi:generate\n# OR without Docker\n./beauty openapi:generate\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Serve ",(0,s.jsx)(n.code,{children:"/openapi.json"})," statically in production for maximum speed."]}),"\n",(0,s.jsx)(n.h2,{id:"under-the-hood",children:"Under the Hood"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Built on ",(0,s.jsx)(n.a,{href:"https://github.com/zircote/swagger-php",children:"zircote/swagger-php"})," (OpenAPI 3.1+ compatible)."]}),"\n",(0,s.jsx)(n.li,{children:"100% compatible with beauty/http responses and PSR-7."}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"limitations--tips",children:"Limitations & Tips"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Static vs Dynamic:"})," If ",(0,s.jsx)(n.code,{children:"/public/openapi.json"})," exists, RoadRunner will serve the file and bypass the controller. Remove the file for dynamic generation."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Performance:"})," Generating the spec dynamically on every request can be slow for big codebases. Use static generation in production."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Customization:"})," Use your own action classes or override the controller methods for full control."]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"resources",children:"Resources"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://github.com/zircote/swagger-php",children:"swagger-php documentation"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://swagger.io/specification/",children:"OpenAPI Specification"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://redocly.com/docs/redoc/",children:"Redoc Documentation"})}),"\n"]})]})}function p(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>r,x:()=>c});var t=i(6540);const s={},o=t.createContext(s);function r(e){const n=t.useContext(o);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),t.createElement(o.Provider,{value:n},e.children)}}}]);