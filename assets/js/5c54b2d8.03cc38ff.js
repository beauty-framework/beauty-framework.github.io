"use strict";(self.webpackChunkbeauty_docs=self.webpackChunkbeauty_docs||[]).push([[4640],{2054:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>i,contentTitle:()=>a,default:()=>u,frontMatter:()=>l,metadata:()=>r,toc:()=>c});const r=JSON.parse('{"id":"Getting Started/controller","title":"Define a Route and Controller","description":"To create a new controller, use the CLI command:","source":"@site/docs/2-Getting Started/controller.md","sourceDirName":"2-Getting Started","slug":"/Getting Started/controller","permalink":"/docs/Getting Started/controller","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1},"sidebar":"tutorialSidebar","previous":{"title":"Getting Started with Beauty Framework","permalink":"/docs/Getting Started/introduction"},"next":{"title":"Create a ValidatedRequest","permalink":"/docs/Getting Started/requests"}}');var s=t(4848),o=t(8453);const l={sidebar_position:1},a="Define a Route and Controller",i={},c=[{value:"\ud83d\udcc1 Example Directory",id:"-example-directory",level:3},{value:"\ud83d\ude80 Example Controller",id:"-example-controller",level:3},{value:"\u2699\ufe0f Available HTTP Methods",id:"\ufe0f-available-http-methods",level:3},{value:"\ud83d\udd27 Notes",id:"-notes",level:3}];function d(e){const n={blockquote:"blockquote",code:"code",h1:"h1",h3:"h3",header:"header",hr:"hr",li:"li",p:"p",pre:"pre",ul:"ul",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"define-a-route-and-controller",children:"Define a Route and Controller"})}),"\n",(0,s.jsx)(n.p,{children:"To create a new controller, use the CLI command:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"make beauty generate:controller HelloController\n# Or without Docker:\n./beauty generate:controller HelloController\n"})}),"\n",(0,s.jsxs)(n.p,{children:["This will generate a controller file in ",(0,s.jsx)(n.code,{children:"app/Controllers"}),"."]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsxs)(n.p,{children:["In Beauty Framework, controllers are simple PHP classes where you define methods annotated with the ",(0,s.jsx)(n.code,{children:"#[Route(...)]"})," attribute. This makes routing expressive and clean."]}),"\n",(0,s.jsx)(n.h3,{id:"-example-directory",children:"\ud83d\udcc1 Example Directory"}),"\n",(0,s.jsxs)(n.p,{children:["Controllers typically live in ",(0,s.jsx)(n.code,{children:"app/Controllers"}),", which is scanned automatically based on ",(0,s.jsx)(n.code,{children:"config/router.php"}),". You can organize them into subfolders (e.g., ",(0,s.jsx)(n.code,{children:"app/Controllers/Admin/"}),", ",(0,s.jsx)(n.code,{children:"app/Controllers/API/"}),"), and specify multiple paths in the config:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-php",children:"// config/router.php\nreturn [\n    'controllers' => [\n        __DIR__ . '/../app/Controllers/**/*.php',\n        __DIR__ . '/../app/Modules/**/*.php',\n    ],\n];\n"})}),"\n",(0,s.jsx)(n.h3,{id:"-example-controller",children:"\ud83d\ude80 Example Controller"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-php",children:"namespace App\\Controllers;\n\nuse Beauty\\Http\\Enums\\HttpMethodsEnum;\nuse Beauty\\Http\\Request\\HttpRequest;\nuse Beauty\\Http\\Response\\JsonResponse;\nuse Beauty\\Routing\\Attributes\\Route;\nuse Psr\\Http\\Message\\ResponseInterface;\n\nclass HelloController\n{\n    #[Route(HttpMethodsEnum::GET, '/users')]\n    public function index(HttpRequest $request): ResponseInterface\n    {\n        return new JsonResponse(data: [\n            'users' => [\n                [\n                    'id' => 1,\n                    'name' => 2,\n                ],\n            ]\n        ]);\n    }\n}\n"})}),"\n",(0,s.jsxs)(n.p,{children:["This registers a ",(0,s.jsx)(n.code,{children:"GET /hello"})," route which returns a JSON response."]}),"\n",(0,s.jsx)(n.h3,{id:"\ufe0f-available-http-methods",children:"\u2699\ufe0f Available HTTP Methods"}),"\n",(0,s.jsxs)(n.p,{children:["Beauty Framework supports all standard HTTP methods via ",(0,s.jsx)(n.code,{children:"HttpMethodsEnum"}),":"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-php",children:"enum HttpMethodsEnum: string\n{\n    case GET = 'GET';\n    case POST = 'POST';\n    case PUT = 'PUT';\n    case PATCH = 'PATCH';\n    case DELETE = 'DELETE';\n    case HEAD = 'HEAD';\n}\n"})}),"\n",(0,s.jsx)(n.p,{children:"These can be used when declaring routes:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-php",children:"#[Route(HttpMethodsEnum::POST, '/submit')]\n"})}),"\n",(0,s.jsx)(n.h3,{id:"-notes",children:"\ud83d\udd27 Notes"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Methods can be named (",(0,s.jsx)(n.code,{children:"index"}),", ",(0,s.jsx)(n.code,{children:"store"}),", etc.)"]}),"\n",(0,s.jsx)(n.li,{children:"You can type-hint custom Request classes or dependencies in method arguments"}),"\n",(0,s.jsxs)(n.li,{children:["Each controller and method can use additional attributes like ",(0,s.jsx)(n.code,{children:"#[Middleware(...)]"})]}),"\n",(0,s.jsxs)(n.li,{children:["The return type of the controller method must be either ",(0,s.jsx)(n.code,{children:"Psr\\Http\\Message\\ResponseInterface"})," or ",(0,s.jsx)(n.code,{children:"Beauty\\Http\\Response\\Contracts\\ResponsibleInterface"})]}),"\n"]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.p,{children:"Once defined, this route will automatically be registered on app boot \u2014 no manual wiring required."}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsx)(n.p,{children:"Continue with ValidatedRequest to handle incoming input and validation."}),"\n"]})]})}function u(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>l,x:()=>a});var r=t(6540);const s={},o=r.createContext(s);function l(e){const n=r.useContext(o);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:l(e.components),r.createElement(o.Provider,{value:n},e.children)}}}]);