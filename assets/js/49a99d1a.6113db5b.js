"use strict";(self.webpackChunkbeauty_docs=self.webpackChunkbeauty_docs||[]).push([[5801],{7631:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>a,contentTitle:()=>c,default:()=>h,frontMatter:()=>t,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"Advanced/jobs","title":"Jobs System","description":"Beauty Framework supports lightweight and powerful job dispatching, which can be executed immediately or deferred to background workers via RoadRunner.","source":"@site/docs/3-Advanced/jobs.md","sourceDirName":"3-Advanced","slug":"/Advanced/jobs","permalink":"/docs/Advanced/jobs","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"sidebar_position":3},"sidebar":"tutorialSidebar","previous":{"title":"Events & Listeners","permalink":"/docs/Advanced/events"},"next":{"title":"Cache System","permalink":"/docs/Advanced/caches"}}');var r=s(4848),o=s(8453);const t={sidebar_position:3},c="Jobs System",a={},d=[{value:"\ud83d\udce6 Defining a Job",id:"-defining-a-job",level:2},{value:"\u2699\ufe0f Dispatching a Job",id:"\ufe0f-dispatching-a-job",level:2},{value:"\ud83e\uddf0 Job Options",id:"-job-options",level:2},{value:"\ud83e\uddf1 Dependency Injection",id:"-dependency-injection",level:2},{value:"\ud83d\udee0 Worker Setup",id:"-worker-setup",level:2},{value:"\ud83d\udd17 Repository",id:"-repository",level:2},{value:"\u2705 Summary",id:"-summary",level:2}];function l(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,o.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"jobs-system",children:"Jobs System"})}),"\n",(0,r.jsx)(n.p,{children:"Beauty Framework supports lightweight and powerful job dispatching, which can be executed immediately or deferred to background workers via RoadRunner."}),"\n",(0,r.jsx)(n.p,{children:"This section walks you through how to create and dispatch jobs, configure options, and utilize dependency injection."}),"\n",(0,r.jsx)(n.h2,{id:"-defining-a-job",children:"\ud83d\udce6 Defining a Job"}),"\n",(0,r.jsxs)(n.p,{children:["Jobs are defined by extending ",(0,r.jsx)(n.code,{children:"Beauty\\Jobs\\AbstractJob"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-php",children:"namespace App\\Jobs;\n\nuse Beauty\\Jobs\\AbstractJob;\nuse Psr\\Log\\LoggerInterface;\n\nclass LogUserJob extends AbstractJob\n{\n    public function __construct(\n        private int $userId,\n        private string $email,\n    ) {}\n\n    public function handle(): void\n    {\n        /** @var LoggerInterface $logger */\n        $logger = $this->container->get(LoggerInterface::class);\n\n        $logger->info('User registered', [\n            'id' => $this->userId,\n            'email' => $this->email,\n            'timestamp' => time(),\n        ]);\n    }\n}\n"})}),"\n",(0,r.jsx)(n.p,{children:"You can generate jobs with:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"make beauty generate:job LogUserJob\n# or without Docker\n./beauty generate:job LogUserJob\n"})}),"\n",(0,r.jsx)(n.h2,{id:"\ufe0f-dispatching-a-job",children:"\u2699\ufe0f Dispatching a Job"}),"\n",(0,r.jsxs)(n.p,{children:["To dispatch a job, inject the ",(0,r.jsx)(n.code,{children:"Beauty\\Jobs\\Dispatcher"})," and call ",(0,r.jsx)(n.code,{children:"dispatch()"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-php",children:"use App\\Jobs\\LogUserJob;\nuse Beauty\\Jobs\\Dispatcher;\n\nclass AuthService\n{\n    public function __construct(\n        protected Dispatcher $dispatcher,\n    ) {}\n\n    public function registerUser(): void\n    {\n        $this->dispatcher->dispatch(new LogUserJob(1, 'user@example.com'));\n    }\n}\n"})}),"\n",(0,r.jsx)(n.h2,{id:"-job-options",children:"\ud83e\uddf0 Job Options"}),"\n",(0,r.jsx)(n.p,{children:"Jobs can define additional runtime behavior via helper methods:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-php",children:"$job = (new LogUserJob(1, 'user@example.com'))\n    ->withDelay(10)               // Delay job for 10 seconds\n    ->withPriority(5)             // Set priority\n    ->withHeader('source', 'api')// Custom metadata\n    ->onQueue('emails')           // Custom queue name\n    ->tags('auth', 'register');   // Tags (for observability)\n"})}),"\n",(0,r.jsxs)(n.p,{children:["These values are set using the ",(0,r.jsx)(n.code,{children:"JobOptions"})," API:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-php",children:"namespace Beauty\\Jobs\\Options;\n\nfinal class JobOptions\n{\n    public function __construct(\n        public int|null $delay = null,\n        public int|null $priority = null,\n        public array $headers = [],\n    ) {}\n\n    public function withDelay(int $seconds): self\n    {\n        $this->delay = $seconds;\n        return $this;\n    }\n\n    public function withPriority(int $priority): self\n    {\n        $this->priority = $priority;\n        return $this;\n    }\n\n    public function withHeaders(array $headers): self\n    {\n        $this->headers = $headers;\n        return $this;\n    }\n}\n"})}),"\n",(0,r.jsx)(n.h2,{id:"-dependency-injection",children:"\ud83e\uddf1 Dependency Injection"}),"\n",(0,r.jsx)(n.p,{children:"Each job has access to the container. You can retrieve any dependency like so:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-php",children:"$logger = $this->container->get(LoggerInterface::class);\n"})}),"\n",(0,r.jsx)(n.h2,{id:"-worker-setup",children:"\ud83d\udee0 Worker Setup"}),"\n",(0,r.jsx)(n.p,{children:"Jobs are handled in a separate worker file:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"/workers/jobs-worker.php\n"})}),"\n",(0,r.jsxs)(n.p,{children:["Ensure it\u2019s configured in ",(0,r.jsx)(n.code,{children:".rr.yaml"})," under the ",(0,r.jsx)(n.code,{children:"jobs"})," section."]}),"\n",(0,r.jsxs)(n.p,{children:["See the official RoadRunner docs:\n\ud83d\udc49 ",(0,r.jsx)(n.a,{href:"https://docs.roadrunner.dev/docs/queues-and-jobs/overview-queues",children:"https://docs.roadrunner.dev/docs/queues-and-jobs/overview-queues"})]}),"\n",(0,r.jsx)(n.h2,{id:"-repository",children:"\ud83d\udd17 Repository"}),"\n",(0,r.jsxs)(n.p,{children:["Jobs are implemented in the ",(0,r.jsx)(n.code,{children:"beauty-framework/jobs"})," package (already connected in the framework):"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.a,{href:"https://github.com/beauty-framework/jobs",children:"https://github.com/beauty-framework/jobs"})}),"\n",(0,r.jsx)(n.h2,{id:"-summary",children:"\u2705 Summary"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Extend ",(0,r.jsx)(n.code,{children:"AbstractJob"})," and implement the ",(0,r.jsx)(n.code,{children:"handle()"})," method"]}),"\n",(0,r.jsxs)(n.li,{children:["Inject dependencies via ",(0,r.jsx)(n.code,{children:"$this->container"})]}),"\n",(0,r.jsx)(n.li,{children:"Control execution with fluent job options"}),"\n",(0,r.jsxs)(n.li,{children:["Dispatch jobs via the ",(0,r.jsx)(n.code,{children:"Dispatcher"})," service"]}),"\n",(0,r.jsxs)(n.li,{children:["Job processing happens inside ",(0,r.jsx)(n.code,{children:"/workers/jobs-worker.php"})]}),"\n",(0,r.jsxs)(n.li,{children:["Use ",(0,r.jsx)(n.code,{children:"make beauty generate:job YourJob"})," to generate boilerplate"]}),"\n",(0,r.jsxs)(n.li,{children:["Powered by RoadRunner Queues (see ",(0,r.jsx)(n.a,{href:"https://docs.roadrunner.dev/docs/queues-and-jobs/overview-queues",children:"RR docs"}),")"]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>t,x:()=>c});var i=s(6540);const r={},o=i.createContext(r);function t(e){const n=i.useContext(o);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:t(e.components),i.createElement(o.Provider,{value:n},e.children)}}}]);