"use strict";(self.webpackChunkbeauty_docs=self.webpackChunkbeauty_docs||[]).push([[694],{4259:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>o,contentTitle:()=>c,default:()=>h,frontMatter:()=>i,metadata:()=>r,toc:()=>l});const r=JSON.parse('{"id":"Advanced/console","title":"CLI & Console Kernel","description":"Beauty Framework includes a powerful and flexible CLI system for building and running custom console commands.","source":"@site/docs/3-Advanced/console.md","sourceDirName":"3-Advanced","slug":"/Advanced/console","permalink":"/docs/Advanced/console","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":9,"frontMatter":{"sidebar_position":9},"sidebar":"tutorialSidebar","previous":{"title":"Configuration System","permalink":"/docs/Advanced/configuration-system"},"next":{"title":"Security (WIP)","permalink":"/docs/Advanced/security"}}');var d=s(4848),t=s(8453);const i={sidebar_position:9},c="CLI & Console Kernel",o={},l=[{value:"\u2728 Create a Command",id:"-create-a-command",level:2},{value:"\ud83e\uddf1 Command Registration",id:"-command-registration",level:2},{value:"\ud83c\udfa8 CLI Output Formatting",id:"-cli-output-formatting",level:2},{value:"\ud83d\udd17 Repository",id:"-repository",level:2}];function a(e){const n={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",header:"header",hr:"hr",li:"li",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,t.R)(),...e.components};return(0,d.jsxs)(d.Fragment,{children:[(0,d.jsx)(n.header,{children:(0,d.jsx)(n.h1,{id:"cli--console-kernel",children:"CLI & Console Kernel"})}),"\n",(0,d.jsx)(n.p,{children:"Beauty Framework includes a powerful and flexible CLI system for building and running custom console commands."}),"\n",(0,d.jsxs)(n.p,{children:["All commands extend the ",(0,d.jsx)(n.code,{children:"AbstractCommand"})," class, and must implement:"]}),"\n",(0,d.jsxs)(n.ul,{children:["\n",(0,d.jsxs)(n.li,{children:[(0,d.jsx)(n.code,{children:"name()"})," \u2014 command name (e.g. ",(0,d.jsx)(n.code,{children:"beauty migrate"}),")"]}),"\n",(0,d.jsxs)(n.li,{children:[(0,d.jsx)(n.code,{children:"description()"})," \u2014 short description shown in help"]}),"\n",(0,d.jsxs)(n.li,{children:[(0,d.jsx)(n.code,{children:"handle(array $args)"})," \u2014 main execution logic"]}),"\n"]}),"\n",(0,d.jsx)(n.h2,{id:"-create-a-command",children:"\u2728 Create a Command"}),"\n",(0,d.jsx)(n.p,{children:"You can generate a new command using the generator:"}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-bash",children:"make beauty generate:command MyCommand\n// or without Docker\n./beauty generate:command MyCommand\n"})}),"\n",(0,d.jsxs)(n.p,{children:["This will create a scaffold in ",(0,d.jsx)(n.code,{children:"app/Console/Commands/MyCommand.php"}),"."]}),"\n",(0,d.jsx)(n.p,{children:"Example usage inside the command:"}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-php",children:"use Beauty\\Cli\\Console\\AbstractCommand;\n\nclass MyCommand extends AbstractCommand\n{\n    public function name(): string\n    {\n        return 'my:command';\n    }\n\n    public function description(): ?string\n    {\n        return 'Demo command';\n    }\n\n    public function handle(array $args): int\n    {\n        $this->info('Running command...');\n        return 0;\n    }\n}\n"})}),"\n",(0,d.jsxs)(n.blockquote,{children:["\n",(0,d.jsx)(n.p,{children:"\u2139\ufe0f Services are automatically injected via constructor using DI."}),"\n"]}),"\n",(0,d.jsx)(n.h2,{id:"-command-registration",children:"\ud83e\uddf1 Command Registration"}),"\n",(0,d.jsxs)(n.p,{children:["Register your commands in ",(0,d.jsx)(n.code,{children:"config/commands.php"}),":"]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-php",children:"return array_merge(\n    \\Beauty\\Core\\Console\\RegisterCommands::commands(),\n    class_exists(\\Beauty\\Jobs\\Console\\RegisterCommands::class) ? \\Beauty\\Jobs\\Console\\RegisterCommands::commands() : [],\n    [\n        \\App\\Console\\Commands\\MyCommand::class, // <-- Add here!\n    ]\n);\n"})}),"\n",(0,d.jsx)(n.hr,{}),"\n",(0,d.jsx)(n.h2,{id:"-cli-output-formatting",children:"\ud83c\udfa8 CLI Output Formatting"}),"\n",(0,d.jsx)(n.p,{children:"You can format CLI output using helper methods provided by the framework:"}),"\n",(0,d.jsxs)(n.table,{children:[(0,d.jsx)(n.thead,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.th,{children:"Method"}),(0,d.jsx)(n.th,{children:"Description"}),(0,d.jsx)(n.th,{children:"Output Style"}),(0,d.jsxs)(n.th,{children:["Available via ",(0,d.jsx)(n.code,{children:"$this->..."})]})]})}),(0,d.jsxs)(n.tbody,{children:[(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"line($msg)"})}),(0,d.jsx)(n.td,{children:"Plain line"}),(0,d.jsx)(n.td,{children:"Default"}),(0,d.jsx)(n.td,{children:"\u2705"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"info($msg)"})}),(0,d.jsx)(n.td,{children:"Informational message"}),(0,d.jsx)(n.td,{children:"Blue"}),(0,d.jsx)(n.td,{children:"\u2705"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"success($msg)"})}),(0,d.jsx)(n.td,{children:"Success message"}),(0,d.jsx)(n.td,{children:"Green"}),(0,d.jsx)(n.td,{children:"\u2705"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"warn($msg)"})}),(0,d.jsx)(n.td,{children:"Warning message"}),(0,d.jsx)(n.td,{children:"Yellow"}),(0,d.jsx)(n.td,{children:"\u2705"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"error($msg)"})}),(0,d.jsx)(n.td,{children:"Error message"}),(0,d.jsx)(n.td,{children:"Red"}),(0,d.jsx)(n.td,{children:"\u2705"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"debug($msg)"})}),(0,d.jsx)(n.td,{children:"Debug output"}),(0,d.jsx)(n.td,{children:"Purple (if debug)"}),(0,d.jsx)(n.td,{children:"\u274c"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"emergency($msg)"})}),(0,d.jsx)(n.td,{children:"Critical/emergency"}),(0,d.jsx)(n.td,{children:"Bold Red"}),(0,d.jsx)(n.td,{children:"\u274c"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"table($headers, $rows)"})}),(0,d.jsx)(n.td,{children:"Tabular output"}),(0,d.jsx)(n.td,{children:"Aligned Table"}),(0,d.jsx)(n.td,{children:"\u274c"})]})]})]}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-php",children:"CliOutput::line('');\n// Or\n$this->line('');\n"})}),"\n",(0,d.jsx)(n.p,{children:"These methods use ANSI codes and take care of width alignment and color formatting automatically."}),"\n",(0,d.jsx)(n.h2,{id:"-repository",children:"\ud83d\udd17 Repository"}),"\n",(0,d.jsxs)(n.p,{children:["CLI are implemented in the ",(0,d.jsx)(n.code,{children:"beauty-framework/cli"})," package (already connected in the framework):"]}),"\n",(0,d.jsx)(n.p,{children:(0,d.jsx)(n.a,{href:"https://github.com/beauty-framework/cli",children:"https://github.com/beauty-framework/cli"})})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,d.jsx)(n,{...e,children:(0,d.jsx)(a,{...e})}):a(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>i,x:()=>c});var r=s(6540);const d={},t=r.createContext(d);function i(e){const n=r.useContext(t);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(d):e.components||d:i(e.components),r.createElement(t.Provider,{value:n},e.children)}}}]);