"use strict";(self.webpackChunkbeauty_docs=self.webpackChunkbeauty_docs||[]).push([[8748],{3074:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>o,contentTitle:()=>c,default:()=>u,frontMatter:()=>i,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"Advanced/database","title":"Database Access","description":"Beauty Framework provides a minimal yet flexible database layer via the beauty-framework/database package.","source":"@site/docs/3-Advanced/database.md","sourceDirName":"3-Advanced","slug":"/Advanced/database","permalink":"/docs/Advanced/database","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":6,"frontMatter":{"sidebar_position":6},"sidebar":"tutorialSidebar","previous":{"title":"Local Process Management","permalink":"/docs/Advanced/processes"},"next":{"title":"ORM (WIP)","permalink":"/docs/Advanced/orm"}}');var t=a(4848),r=a(8453);const i={sidebar_position:6},c="Database Access",o={},d=[{value:"\ud83d\udce6 Features",id:"-features",level:2},{value:"\u2699\ufe0f Basic Usage",id:"\ufe0f-basic-usage",level:2},{value:"\ud83d\udd04 Transactions",id:"-transactions",level:2},{value:"\ud83d\udd27 Drivers and Configuration",id:"-drivers-and-configuration",level:2},{value:"\ud83d\udd17 Repository",id:"-repository",level:2},{value:"\ud83d\udccc Notes",id:"-notes",level:2}];function l(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",hr:"hr",li:"li",p:"p",pre:"pre",ul:"ul",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"database-access",children:"Database Access"})}),"\n",(0,t.jsxs)(n.p,{children:["Beauty Framework provides a minimal yet flexible database layer via the ",(0,t.jsx)(n.a,{href:"https://github.com/beauty-framework/database",children:"beauty-framework/database"})," package."]}),"\n",(0,t.jsx)(n.p,{children:"It supports direct SQL queries, transactions, and multiple connection types \u2014 while allowing for easy extensibility."}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"-features",children:"\ud83d\udce6 Features"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Lightweight abstraction over native PDO"}),"\n",(0,t.jsx)(n.li,{children:"Safe query execution with prepared statements"}),"\n",(0,t.jsx)(n.li,{children:"Transactions with rollback support"}),"\n",(0,t.jsx)(n.li,{children:"Multiple driver support: PostgreSQL, MySQL, SQLite, SQL Server"}),"\n",(0,t.jsxs)(n.li,{children:["Extendable ",(0,t.jsx)(n.code,{children:"ConnectionInterface"})]}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"\ufe0f-basic-usage",children:"\u2699\ufe0f Basic Usage"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-php",children:"use Beauty\\Database\\Connection\\ConnectionInterface;\n\nclass MyService\n{\n    public function __construct(\n        private ConnectionInterface $db,\n    ) {}\n\n    public function getData(): array\n    {\n        return $this->db->select('SELECT * FROM users WHERE active = ?', [1]);\n    }\n}\n"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"-transactions",children:"\ud83d\udd04 Transactions"}),"\n",(0,t.jsxs)(n.p,{children:["Use ",(0,t.jsx)(n.code,{children:"transaction()"})," to ensure safe execution:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-php",children:"$db->transaction(function (ConnectionInterface $tx) {\n    $tx->insert('INSERT INTO users (name) VALUES (?)', ['Kirill']);\n    $tx->update('UPDATE stats SET count = count + 1');\n});\n"})}),"\n",(0,t.jsx)(n.p,{children:"If any exception is thrown \u2014 the transaction is rolled back."}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"-drivers-and-configuration",children:"\ud83d\udd27 Drivers and Configuration"}),"\n",(0,t.jsxs)(n.p,{children:["Database drivers are configured in ",(0,t.jsx)(n.code,{children:"config/database.php"}),". Here's a sample structure:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-php",children:"<?php\n\nreturn [\n    'default' => env('DB_CONNECTION', 'pgsql'),\n\n    'connections' => [\n        'pgsql' => [\n            'driver' => 'pgsql',\n            'host' => env('DB_HOST', '127.0.0.1'),\n            'port' => env('DB_PORT', 5432),\n            'database' => env('DB_DATABASE', 'app'),\n            'username' => env('DB_USERNAME', 'user'),\n            'password' => env('DB_PASSWORD', 'secret'),\n            'charset' => 'utf8',\n        ],\n\n        'mysql' => [\n            'driver' => 'mysql',\n            'host' => env('DB_HOST', '127.0.0.1'),\n            'port' => env('DB_PORT', 3306),\n            'database' => env('DB_DATABASE', 'app'),\n            'username' => env('DB_USERNAME', 'user'),\n            'password' => env('DB_PASSWORD', 'secret'),\n            'charset' => 'utf8mb4',\n        ],\n\n        'sqlite' => [\n            'driver' => 'sqlite',\n            'database' => env('DB_DATABASE', 'dev.sqlite'),\n        ],\n\n        'sqlsrv' => [\n            'driver' => 'sqlsrv',\n            'host' => env('DB_HOST', '127.0.0.1'),\n            'port' => env('DB_PORT', 1433),\n            'database' => env('DB_DATABASE', 'app'),\n            'username' => env('DB_USERNAME', 'user'),\n            'password' => env('DB_PASSWORD', 'secret'),\n            'encrypt' => env('DB_ENCRYPT', 'no'),\n            'trust_cert' => env('DB_TRUST_CERT', 'yes'),\n        ],\n    ],\n];\n"})}),"\n",(0,t.jsxs)(n.p,{children:["For more details \u2014 including how to implement your own driver \u2014 see: ",(0,t.jsx)(n.a,{href:"/docs/Installation/Configs/database",children:"Configs/Database"})]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"-repository",children:"\ud83d\udd17 Repository"}),"\n",(0,t.jsxs)(n.p,{children:["Database are implemented in the ",(0,t.jsx)(n.code,{children:"beauty-framework/database"})," package (already connected in the framework):"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/beauty-framework/database",children:"https://github.com/beauty-framework/database"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"-notes",children:"\ud83d\udccc Notes"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["You can bind your own custom implementations of ",(0,t.jsx)(n.code,{children:"ConnectionInterface"}),"."]}),"\n",(0,t.jsx)(n.li,{children:"Database layer is intentionally simple \u2014 a query builder/ORM is planned in future versions."}),"\n"]})]})}function u(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(l,{...e})}):l(e)}},8453:(e,n,a)=>{a.d(n,{R:()=>i,x:()=>c});var s=a(6540);const t={},r=s.createContext(t);function i(e){const n=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:i(e.components),s.createElement(r.Provider,{value:n},e.children)}}}]);