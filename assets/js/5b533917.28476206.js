"use strict";(self.webpackChunkbeauty_docs=self.webpackChunkbeauty_docs||[]).push([[1814],{8453:(n,e,i)=>{i.d(e,{R:()=>r,x:()=>a});var t=i(6540);const o={},s=t.createContext(o);function r(n){const e=t.useContext(s);return t.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function a(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(o):n.components||o:r(n.components),t.createElement(s.Provider,{value:e},n.children)}},9713:(n,e,i)=>{i.r(e),i.d(e,{assets:()=>c,contentTitle:()=>a,default:()=>p,frontMatter:()=>r,metadata:()=>t,toc:()=>l});const t=JSON.parse('{"id":"Installation/Configs/di","title":"Dependency Injection Configuration (App\\\\Container\\\\DI)","description":"Beauty Framework uses a powerful and flexible DI container built on top of php-di. You can configure your own bindings in the App\\\\Container\\\\DI::configure class.","source":"@site/docs/1-Installation/Configs/di.md","sourceDirName":"1-Installation/Configs","slug":"/Installation/Configs/di","permalink":"/docs/Installation/Configs/di","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":11,"frontMatter":{"sidebar_position":11},"sidebar":"tutorialSidebar","previous":{"title":"Console Commands Configuration (config/commands.php)","permalink":"/docs/Installation/Configs/commands"},"next":{"title":"Getting Started with Beauty Framework","permalink":"/docs/Getting Started/introduction"}}');var o=i(4848),s=i(8453);const r={sidebar_position:11},a="Dependency Injection Configuration (AppContainerDI)",c={},l=[{value:"\ud83d\udd27 Example Binding",id:"-example-binding",level:3}];function d(n){const e={blockquote:"blockquote",code:"code",h1:"h1",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...n.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(e.header,{children:(0,o.jsxs)(e.h1,{id:"dependency-injection-configuration-appcontainerdi",children:["Dependency Injection Configuration (",(0,o.jsx)(e.code,{children:"App\\Container\\DI"}),")"]})}),"\n",(0,o.jsxs)(e.p,{children:["Beauty Framework uses a powerful and flexible DI container built on top of ",(0,o.jsx)(e.code,{children:"php-di"}),". You can configure your own bindings in the ",(0,o.jsx)(e.code,{children:"App\\Container\\DI::configure"})," class."]}),"\n",(0,o.jsx)(e.h3,{id:"-example-binding",children:"\ud83d\udd27 Example Binding"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-php",children:"$container->singleton(LoggerInterface::class, fn() => new Logger('stdout'));\n"})}),"\n",(0,o.jsx)(e.p,{children:"This is useful for:"}),"\n",(0,o.jsxs)(e.ul,{children:["\n",(0,o.jsx)(e.li,{children:"Binding interfaces to implementations"}),"\n",(0,o.jsx)(e.li,{children:"Registering shared singletons"}),"\n",(0,o.jsx)(e.li,{children:"Injecting third-party services (e.g. SDKs)"}),"\n"]}),"\n",(0,o.jsx)(e.p,{children:"All controllers and services receive their dependencies automatically via constructor injection."}),"\n",(0,o.jsxs)(e.blockquote,{children:["\n",(0,o.jsx)(e.p,{children:"This file gives you full control over the application's dependency graph."}),"\n"]})]})}function p(n={}){const{wrapper:e}={...(0,s.R)(),...n.components};return e?(0,o.jsx)(e,{...n,children:(0,o.jsx)(d,{...n})}):d(n)}}}]);